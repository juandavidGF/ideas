import styles from '@/styles/Posts.module.css'
import { Inter } from '@next/font/google'
import Head from 'next/head'
import clientPromise from '../../lib/mongodb'

export async function getServerSideProps(context) {
	try {
		const client = await clientPromise
		const db = await client.db(process.env.MONGO_DB_NEWS);
		const collection = db.collection(process.env.MONGO_COLLECTION_HN);

		const todayZero = new Date();
		todayZero.setHours(0);
		todayZero.setMinutes(0);
		todayZero.setSeconds(0);
		const todayZeroTime = todayZero.getTime();

		const news = await collection.find({
			created_at: { $gt: todayZeroTime },
			"data.0.summary": { $exists: true }
		}).toArray()

		return {
			props: {
				isConnected: true,
				news: JSON.parse(JSON.stringify(news)),
			},
		}
	} catch (err) {
		console.error("server side err:", err);
    return {
      props: { isConnected: false },
    }
	}
}

const inter = Inter({ subsets: ['latin'] })

export default function Home({
	isConnected,
	news,
}) {

	const handleSubmit = async (e) => {
		e.preventDefault();
		const email = e.target.email.value;
		if (!email) return;
		try {
			const res = await fetch('/api/new-suscripter', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({ email: email }),
			});
			const data = await res.json();
			if(data.success === 'Ok') {
				document.getElementById('status').style.color  = "green"
				document.getElementById('status').innerHTML = 'Subscription successful';
			} else {
				document.getElementById('status').style.color  = "red"
				document.getElementById('status').innerHTML = 'Error';
			}
		} catch (error) {
			console.log(error)
			document.getElementById('status').style.color  = "red"
			document.getElementById('status').innerHTML = 'Error';
		}
		e.target.email.value = '';
	}

  return (
    <>
      <Head>
        <title>AI-Posts</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <main>
				<div className={styles.suscription}>
					<form onSubmit={handleSubmit} className={styles.formClass}>
						<input className={styles.email} type="text" id="email" placeholder="example@email.com" pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$" />
						<button className={styles.suscribe} type="submit">suscribe</button>
						<div id='status'></div>
					</form>
				</div>
				{isConnected ?
					<div className='content'>
						{news[0].data.map((item, index) => {
							return (
								<div key={index}>
									<h3>{index+1}. <a href={item.link}>{item.title}</a></h3>
									<ul>
										{item.summary.split('.,').map((sentence, index) => {
											return (
												<li key={index}>{sentence}</li>
											)
										})}
									</ul>
								</div>
							)
						})}
					</div>
					: <h1>Today's AI Posts (offline)</h1>
				}
      </main>
    </>
  )
}
